{
  "openapi": "3.0.2",
  "info": {
    "title": "EduCRM",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3002"
    },
    {
      "url": "https://edu-crm-api-exp.onrender.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "paths": {
    "/sign-up": {
      "post": {
        "tags": [
          "Public"
        ],
        "summary": "Operation registers either student or mentor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "mentor",
                      "student"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Admin(curator) cannot be registered"
          },
          "409": {
            "description": "User already exists"
          },
          "500": {
            "description": "Database errors"
          },
          "201": {
            "description": "Registered"
          }
        }
      }
    },
    "/sign-in": {
      "post": {
        "tags": [
          "Public"
        ],
        "summary": "Login, should return jwt token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Database errors"
          },
          "202": {
            "description": "Authorization"
          }
        }
      }
    },
    "/courses": {
      "get": {
        "tags": [
          "Public"
        ],
        "responses": {
          "200": {
            "description": "List of all courses"
          }
        }
      }
    },
    "/academicAreas": {
      "get": {
        "tags": [
          "Public"
        ],
        "responses": {
          "200": {
            "description": "List of all academic areas"
          }
        }
      }
    },
    "/admin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "201": {
            "description": "Curator registered"
          },
          "409": {
            "description": "User already exists"
          },
          "500": {
            "description": "Can't store user in database"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Curator deleted"
          },
          "500": {
            "description": "Can't delete `curator` from database"
          }
        }
      }
    },
    "/admin/academicArea": {
      "post": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "201": {
            "description": "Academic area was added"
          },
          "500": {
            "description": "Can't store `Academic Area` in database"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Academic area deleted"
          },
          "500": {
            "description": "Can't delete `academic area`"
          }
        }
      }
    },
    "/admin/classRequests": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Status of student's request changed"
          },
          "404": {
            "description": "Incorrect request ID"
          },
          "500": {
            "description": "Can't update request"
          }
        }
      }
    },
    "/admin/course": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Create group course",
        "parameters": [
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "syllabus": {
                    "type": "string"
                  },
                  "files": {
                    "type": "array",
                    "title": "Links to files",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "sessions_count": {
                    "type": "number"
                  },
                  "payment": {
                    "type": "string",
                    "title": "price"
                  },
                  "starting_date": {
                    "type": "string",
                    "example": "2001-12-01"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Course created"
          },
          "500": {
            "description": "Database errors"
          }
        }
      }
    },
    "/admin/requests/student/all": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Returns all student requests",
        "responses": {
          "200": {
            "description": "Successful request"
          }
        }
      }
    },
    "/admin/requests/student/{studentId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Returns all student requests by student id. Query params passes a student id : string",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request"
          },
          "404": {
            "description": "Request not found"
          }
        }
      }
    },
    "/admin/requests/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Returns one request by request id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request"
          },
          "404": {
            "description": "Request not found"
          }
        }
      }
    },
    "/admin/requests/student/edit": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Approve or decline student request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "student": {
                    "type": "string",
                    "format": "email"
                  },
                  "course": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "waiting",
                      "approved",
                      "declined"
                    ]
                  },
                  "decisionDate": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "StudentRequest updated"
          },
          "500": {
            "description": "Request doesn't exist"
          }
        }
      }
    },
    "/student/requests/{studentId}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Returns all student requests by student id. Query params passes a student id : string",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request"
          }
        }
      }
    },
    "/student/requests/{id}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Returns one request by request id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request"
          },
          "404": {
            "description": "Request not found"
          }
        }
      }
    },
    "/student/requests/new": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Creates a new student request for a course",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "student": {
                    "type": "string",
                    "format": "Student.Id"
                  },
                  "course": {
                    "type": "string",
                    "format": "Course.Id"
                  },
                  "status": {
                    "type": "string",
                    "default": "waiting",
                    "enum": [
                      "waiting",
                      "approved",
                      "declined"
                    ]
                  },
                  "requestDate": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Database error, while saving `StudentRequest`"
          }
        }
      }
    },
    "/student/requests/delete/{id}": {
      "delete": {
        "tags": [
          "Student"
        ],
        "summary": "Deletes one request by request id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "StudentRequest deleted"
          },
          "500": {
            "description": "Database error deleting `StudentRequest`"
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": [
          "Public"
        ],
        "responses": {
          "200": {
            "description": "List of all reviews"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": [
          "Public"
        ],
        "responses": {
          "200": {
            "description": "View one review by passing review id as path variable"
          }
        }
      }
    },
    "/reviews/delete/{id}": {
      "delete": {
        "tags": [
          "Private"
        ],
        "summary": "Deletes one review by ID in Path Variable. Available to authenticated users.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Review was deleted"
          },
          "500": {
            "description": "Database error deleting `Review`"
          }
        }
      }
    },
    "/reviews/new": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Creates new review. Available to students.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "number",
                    "default": "5.0"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "student": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review was created"
          },
          "500": {
            "description": "Database error, while saving `Review`"
          }
        }
      }
    },
    "/reviews/edit": {
      "put": {
        "tags": [
          "Student"
        ],
        "summary": "Edits existing review. Available to students.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "number",
                    "default": "5.0"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "student": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review was updated"
          },
          "400": {
            "description": "Review doesn't exist"
          }
        }
      }
    },
    "/admin/students": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "View all students",
        "responses": {
          "200": {
            "description": "Successfully got student profiles"
          },
          "404": {
            "description": "No Data"
          }
        }
      }
    },
    "/profile/student/{profileId}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "view one student profile by profile id",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got student profile"
          },
          "404": {
            "description": "No Data"
          }
        }
      }
    },
    "/student": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "create new student profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nameChinese": {
                    "type": "string"
                  },
                  "nameEnglish": {
                    "type": "string"
                  },
                  "profilePhoto": {
                    "type": "string"
                  },
                  "studentContacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "owner": {
                          "type": "string",
                          "enum": [
                            "student"
                          ]
                        },
                        "contactService": {
                          "type": "string",
                          "description": "The ID of the contact service"
                        },
                        "contactValue": {
                          "type": "string",
                          "description": "The value of the contact information"
                        }
                      },
                      "required": [
                        "owner",
                        "contactService",
                        "contactValue"
                      ]
                    }
                  },
                  "parentContacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "owner": {
                          "type": "string",
                          "enum": [
                            "student"
                          ]
                        },
                        "contactService": {
                          "type": "string",
                          "description": "The ID of the contact service"
                        },
                        "contactValue": {
                          "type": "string",
                          "description": "The value of the contact information"
                        }
                      },
                      "required": [
                        "owner",
                        "contactService",
                        "contactValue"
                      ]
                    }
                  },
                  "school": {
                    "type": "string"
                  },
                  "accountLogin": {
                    "type": "string"
                  },
                  "accountEmail": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Can't save profile to database"
          },
          "201": {
            "description": "Successfully created profile"
          }
        }
      },
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "update student profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nameChinese": {
                    "type": "string"
                  },
                  "nameEnglish": {
                    "type": "string"
                  },
                  "profilePhoto": {
                    "type": "string"
                  },
                  "studentWechat": {
                    "type": "string"
                  },
                  "parentWechat": {
                    "type": "string"
                  },
                  "studentEmail": {
                    "type": "string"
                  },
                  "studentWhatsApp": {
                    "type": "string"
                  },
                  "parentWhatsApp": {
                    "type": "string"
                  },
                  "parentTelegram": {
                    "type": "string"
                  },
                  "school": {
                    "type": "string"
                  },
                  "accountLogin": {
                    "type": "string"
                  },
                  "accountEmail": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Profile doesn't exist"
          },
          "200": {
            "description": "Successfully updated profile"
          }
        }
      },
      "delete": {
        "tags": [
          "Profile"
        ],
        "summary": "Deletes profile by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "user": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile was deleted"
          },
          "500": {
            "description": "Can't delete profile"
          }
        }
      }
    },
    "/contactServices": {
      "get": {
        "tags": [
          "Public"
        ],
        "summary": "get all contact services: WeChat, Email, Telegram, etc.",
        "responses": {
          "200": {
            "description": "List of contact services"
          }
        }
      }
    },
    "/admin/contactServices": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "create a new contact service. i.e., Instagram, Telegram",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactService": "string"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Database error, while saving `ContactService`"
          }
        }
      }
    },
    "/admin/contactServices/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "edit existing contact service. i.e., fix a typo",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the contact service to be edited"
          },
          {
            "in": "body",
            "name": "contactService",
            "required": true,
            "schema": {
              "type": "object"
            },
            "description": "The updated contact service data"
          }
        ],
        "responses": {
          "200": {
            "description": "ContactService was updated"
          },
          "400": {
            "description": "ContactService doesn't exist"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "delete a contact service by service id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ContactService was deleted"
          },
          "500": {
            "description": "Database error deleting `ContactService`"
          }
        }
      }
    },
    "/instructors": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "View all instructors",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message regarding the operation"
                    },
                    "data": {
                      "type": "array",
                      "description": "Array of instructor profiles"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message indicating no data found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/instructor/{profileId}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "View one instructor profile by profile id",
        "parameters": [
          {
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the instructor profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message regarding the operation"
                    },
                    "data": {
                      "description": "Instructor profile object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message indicating no data found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instructor": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Create a new instructor profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "subject": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message regarding the operation"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "profileId": {
                          "type": "string",
                          "description": "ID of the created profile"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Update instructor profile",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Authorization token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "subject": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Profile doesn't exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message indicating profile doesn't exist"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message indicating forbidden access"
                    },
                    "message": {
                      "type": "string",
                      "description": "Additional message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message indicating user not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Profile"
        ],
        "summary": "Delete instructor profile",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Authorization token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message regarding the operation"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message indicating no profile found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Can't delete profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message indicating deletion failure"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}